# Example configuration for pgcopy
# This file demonstrates the ignore and transform features

schemas:
  - name: public
    tables:
      # Users table with both ignore and transform
      - name: users
        ignore: 
          - internal_notes      # Completely exclude non-critical columns
          - debug_flags
          - password_hash
        transform:
          email: "hash"
        truncate: true  # This table will be truncated before copy

      # Products table with transformations
      - name: products
        transform:
          cost: "ROUND(cost * 1.1, 2)"  # Add 10% markup for testing
          supplier_id: "supplier_id"     # Keep as-is (no transformation)
          attributes: "jsonb_set(attributes, '{sensitive}', '\"REDACTED\"'::jsonb)"
        # No truncate specified - table will not be truncated

      # Orders table with filters and transformations
      - name: orders
        filter: "created_at >= '2024-01-01'"
        transform:
          credit_card: "'****-****-****-' || RIGHT(credit_card, 4)"
          customer_notes: "CASE WHEN customer_notes LIKE '%PII%' THEN 'REDACTED' ELSE customer_notes END"
          payment_info: "'{\"method\": \"REDACTED\"}'"
        truncate: false  # This table will NOT be truncated

      # Simple table with just ignore
      - name: audit_logs
        ignore:
          - raw_data
          - debug_info

  - name: analytics
    tables:
      # Page views with anonymization
      - name: page_views
        transform:
          user_id: "CASE WHEN user_id IS NOT NULL THEN 'anon-' || encode(sha256(user_id::text::bytea), 'hex') ELSE NULL END"
          ip_address: "'192.168.1.0'"  # Replace with private IP
          user_agent: "'REDACTED'"
          session_id: "md5(session_id::text)"

      # Complex data types with transformations
      - name: complex_data
        transform:
          simple_json: "'{\"transformed\": true}'"
          nested_json: "jsonb_set(nested_json, '{user,name}', '\"ANONYMOUS\"'::jsonb)"
          string_array: "ARRAY['transformed']"
          int_array: "ARRAY[1,2,3]"

# Built-in transformation functions available:
# - hash: encode(sha256($1::text::bytea), 'hex')
# - redact: '***REDACTED***'
# - anonymize: 'anon-' || encode(sha256($1::text::bytea), 'hex')
# - nullify: NULL
# - default: COALESCE($1, NULL) (simplified version)
#
# Custom SQL expressions can also be used by replacing $1 with the column name 